{"ast":null,"code":"export class PawnsStructures {\n  constructor(chess, material) {\n    this.chess = chess;\n    this.material = material;\n  }\n\n  description() {\n    return \"PawnsStructures\";\n  }\n\n  score() {\n    let score = 0;\n    score += this.scoreDoublePawns();\n    return score;\n  }\n\n  scoreDoublePawns() {\n    var _a, _b;\n\n    let score = 0;\n    let countWhite;\n    let countBlack;\n\n    for (let i = 0; i < 8; i++) {\n      countWhite = 0;\n      countBlack = 0;\n\n      for (let j = 1; j < 7; j++) {\n        if (((_a = this.chess.board()[j][i]) === null || _a === void 0 ? void 0 : _a.type) === 'p') {\n          if (((_b = this.chess.board()[j][i]) === null || _b === void 0 ? void 0 : _b.color) === 'w') {\n            countWhite++;\n          } else {\n            countBlack++;\n          }\n        }\n      }\n\n      score += countBlack > 1 ? (countBlack - 1) * 0.1 : 0;\n      score -= countWhite > 1 ? (countWhite - 1) * 0.1 : 0;\n    } // for(let i=0; i<this.material.whitePawnsPositions.length-1; i++) {\n    //     if(this.material.whitePawnsPositions[i].x === this.material.whitePawnsPositions[i+1].x) {\n    //         score -= 0.1;\n    //     }\n    // }\n    // for(let i=0; i<this.material.blackPawnsPositions.length-1; i++) {\n    //     if(this.material.blackPawnsPositions[i].x === this.material.blackPawnsPositions[i+1].x) {\n    //         score += 0.1;\n    //     }\n    // }\n\n\n    return score;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}