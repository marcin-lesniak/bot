{"ast":null,"code":"// const axios = require(\"axios\");\n// const oboe = require(\"oboe\");\nimport axios from \"axios\";\nimport * as oboe from \"oboe\";\nexport class LichessApi {\n  constructor() {\n    this.token = \"lip_U2PnD9AVg0rt8zcIsjYk\"; // private baseURL = \"http://localhost:4200/\";\n\n    this.baseURL = \"https://marcin-lesniak.github.io/bot/\";\n    this.headers = {\n      \"Authorization\": `Bearer ${this.token}`\n    };\n    this.axiosConfig = {\n      baseURL: this.baseURL,\n      headers: this.headers\n    };\n  }\n\n  getOnlineBots() {\n    return this.get(\"api/bot/online\");\n  }\n\n  acceptChallenge(challengeId) {\n    return this.post(`api/challenge/${challengeId}/accept`);\n  }\n\n  declineChallenge(challengeId) {\n    return this.post(`api/challenge/${challengeId}/decline`);\n  }\n\n  upgrade() {\n    return this.post(\"api/bot/account/upgrade\");\n  }\n\n  accountInfo() {\n    return this.get(\"api/account\");\n  }\n\n  makeMove(gameId, move) {\n    return this.post(`api/bot/game/${gameId}/move/${move}`);\n  }\n\n  abortGame(gameId) {\n    return this.post(`api/bot/game/${gameId}/abort`);\n  }\n\n  resignGame(gameId) {\n    return this.post(`api/bot/game/${gameId}/resign`);\n  }\n\n  streamEvents(handler) {\n    return this.stream(\"api/stream/event\", handler);\n  }\n\n  streamGame(gameId, handler) {\n    return this.stream(`api/bot/game/stream/${gameId}`, handler);\n  }\n\n  chat(gameId, room, text) {\n    return this.post(`api/bot/game/${gameId}/chat`, {\n      room,\n      text\n    });\n  }\n\n  logAndReturn(data) {\n    console.log(JSON.stringify(data.data));\n    return data;\n  }\n\n  challenge(botId) {\n    return this.post(`api/challenge/${botId}`, {\n      rated: true,\n      clock: {\n        limit: 60,\n        increment: 1\n      },\n      variant: \"standard\",\n      keepAliveStream: \"false\"\n    });\n  }\n\n  get(URL) {\n    console.log(`GET ${URL}`);\n    return axios.get(URL + \"?v=\" + Date.now(), this.axiosConfig).then(this.logAndReturn).catch(err => console.log(err));\n  }\n\n  post(URL, body) {\n    console.log(`POST ${URL} ` + JSON.stringify(body || {}));\n    return axios.post(URL, body || {}, this.axiosConfig).then(this.logAndReturn).catch(err => console.log(err.response || err));\n  }\n  /**\r\n   * Connect to stream with handler.\r\n   *\r\n   * The axios library does not support streams in the browser so use oboe.\r\n   */\n\n\n  stream(URL, handler) {\n    console.log(`GET ${URL} stream`);\n    oboe({\n      method: \"GET\",\n      url: this.baseURL + URL,\n      headers: this.headers\n    }).node(\"!\", function (data) {\n      console.log(\"STREAM data : \" + JSON.stringify(data));\n      handler(data);\n    }).fail(function (errorReport) {\n      console.error(JSON.stringify(errorReport));\n    });\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}