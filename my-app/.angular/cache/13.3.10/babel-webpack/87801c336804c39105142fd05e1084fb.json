{"ast":null,"code":"export class HangingPeaces {\n  constructor(chess, material, SQUARES) {\n    this.chess = chess;\n    this.material = material;\n    this.SQUARES = SQUARES;\n  }\n\n  description() {\n    return \"HangingPeaces\";\n  }\n\n  score() {\n    return -0.01 * (this.countForWhite() - this.countForBlack());\n  }\n\n  countForWhite() {\n    let count = 0;\n    this.material.getAllWhitePeacesPosition().forEach(p => {\n      let field = this.SQUARES[p.y * 8 + p.x];\n\n      if (!this.chess.isAttacked(field, 'w')) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n  countForBlack() {\n    let count = 0;\n    this.material.getAllBlackPeacesPosition().forEach(p => {\n      let field = this.SQUARES[p.y * 8 + p.x];\n\n      if (!this.chess.isAttacked(field, 'b')) {\n        count++;\n      }\n    });\n    return count;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}