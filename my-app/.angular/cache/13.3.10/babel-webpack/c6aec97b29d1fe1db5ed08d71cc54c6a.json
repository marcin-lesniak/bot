{"ast":null,"code":"import _asyncToGenerator from \"C:\\\\Users\\\\Lesiu\\\\Documents\\\\ChessEngineJS\\\\my-app\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";\nimport { Game } from \"./Game\";\nexport class RobotUser {\n  /**\r\n   * Initialise with access token to lichess and a player algorithm.\r\n   */\n  constructor(api, replyChat, getNextMove) {\n    this.api = api;\n    this.replyChat = replyChat;\n    this.getNextMove = getNextMove;\n  }\n\n  start() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.account = yield _this.api.accountInfo();\n      console.log(\"Playing as \" + _this.account.data.username);\n\n      _this.api.streamEvents(event => _this.eventHandler(event));\n\n      return _this.account;\n    })();\n  }\n\n  eventHandler(event) {\n    switch (event.type) {\n      case \"challenge\":\n        this.handleChallenge(event.challenge);\n        break;\n\n      case \"gameStart\":\n        this.handleGameStart(event.game.id);\n        break;\n\n      default:\n        console.log(\"Unhandled event : \" + JSON.stringify(event));\n    }\n  }\n\n  handleGameStart(id) {\n    const game = new Game(this.api, this.account.data.username, this.replyChat, this.getNextMove);\n    game.start(id);\n  }\n\n  handleChallenge(challenge) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (challenge.challenger.id === \"marcinlebot\") return;\n\n      if (challenge.rated) {\n        console.log(\"Declining rated challenge from \" + challenge.challenger.id);\n        const response = yield _this2.api.declineChallenge(challenge.id);\n        console.log(\"Declined\", response.data || response);\n      } else {\n        console.log(\"Accepting unrated challenge from \" + challenge.challenger.id);\n        const response = yield _this2.api.acceptChallenge(challenge.id);\n        console.log(\"Accepted\", response.data || response);\n      }\n    })();\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}